{
    "openapi": "3.0.1",
    "info": {
        "title": "Item Management",
        "description": "The Item Management APIs enable you to set up and manage items on Walmart.com. Once you have completed Registration and have access to your Consumer ID and Private Key, you can get started with the integration process",
        "version": "0.7.0"
    },
    "servers": [
        {
            "url": "https:\/\/marketplace.walmartapis.com",
            "description": "Production URL"
        }
    ],
    "paths": {
        "\/v3\/ca\/feeds": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Bulk upload",
                "description": "You can upload items in bulk. If the items are successfully uploaded, it returns a feed ID. Use the returned feed ID to retrieve a feed status.\nYou can use the Bulk Item Setup API for any of the following item spec versions, just specify the corresponding feed type as a query parameter. Please ensure the WFS onboarding is complete before using WFS Specs or converting items to WFS\n*   Item spec feed type: item\n*   WFS Item spec feed type: OMNI_WFSSETUP \n* Item spec feed type for 4.x spec: MP_ITEM_INTL \n*   Convert an existing item to WFS feed type : OMNI_WFSCONVERT \n",
                "operationId": "bulkItemSetupCA",
                "parameters": [
                    {
                        "name": "feedType",
                        "in": "query",
                        "description": "The feed Type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "description": "Feed file to upload",
                                        "format": "binary"
                                    }
                                }
                            },
                            "examples": {
                                "MP_ITEM_INTL": {
                                    "value": {
                                        "MPItemFeedHeader": {
                                            "subCategory": "clothing_other",
                                            "sellingChannel": "marketplace",
                                            "processMode": "REPLACE",
                                            "mart": "WALMART_CA",
                                            "locale": [
                                                "en",
                                                "fr"
                                            ],
                                            "version": "3.15",
                                            "subset": "EXTERNAL"
                                        },
                                        "MPItem": [
                                            {
                                                "Orderable": {
                                                    "sku": "CLOTHING_22112022_C101",
                                                    "shortDescription": {
                                                        "en": "Test001 - Good in quality and reliability Popular brand names like Under Armour, American Eagle, Tommy Hilfiger had no issues with marketing their brand names because all of them are started before the internet era and with less competition in the field they succeed with their business field."
                                                    },
                                                    "keyFeatures": [
                                                        {
                                                            "en": "Famous dress which can be used casual - 001"
                                                        }
                                                    ],
                                                    "shipsInOriginalPackaging": "No",
                                                    "MustShipAlone": "No",
                                                    "price": 60,
                                                    "startDate": "2023-01-06",
                                                    "endDate": "2049-12-31",
                                                    "productSecondaryImageURL": [
                                                        "https:\/\/i5-qa.walmartimages.com\/asr\/f2b29a73-019f-47a3-9d24-38781ca43866.5b35e8c32dc2e35919d0700cb2f2a32f.jpeg"
                                                    ],
                                                    "productIdentifiers": {
                                                        "productIdType": "GTIN",
                                                        "productId": "00213656080788"
                                                    },
                                                    "productName": {
                                                        "en": "Rest in peace after wearing the product Aqua 4 Swimwear for all the participants commonly"
                                                    },
                                                    "mainImageUrl": "https:\/\/i5-qa.walmartimages.com\/asr\/7b32a240-42f6-4369-84e3-0cc5d9aeb4c5.a3a8d9b3e63400c147a289ca77fad35a.jpeg",
                                                    "brand": {
                                                        "en": "M&M"
                                                    },
                                                    "productTaxCode": 12345678,
                                                    "ShippingWeight": {
                                                        "unit": "lb",
                                                        "measure": 8
                                                    }
                                                },
                                                "Visible": {
                                                    "Clothing": []
                                                }
                                            }
                                        ]
                                    }
                                },
                                "xml": {
                                    "value": "<MPItemFeed xmlns:ns2=\"http:\/\/walmart.com\/\">\n    <MPItemFeedHeader>\n        <version>3.2<\/version>\n        <requestId>HP_REQUEST<\/requestId>\n        <requestBatchId>HP_REQUEST_BATCH<\/requestBatchId>\n        <feedDate>2007-10-25T23:36:28<\/feedDate>\n        <mart>WALMART_CA<\/mart>\n        <locale>en_CA<\/locale>\n    <\/MPItemFeedHeader>\n    <MPItem>\n        <feedDate>2006-08-19T10:27:14-07:00<\/feedDate>\n        <sku>weiMong14447994161<\/sku>\n        <productIdentifiers>\n            <productIdentifier>\n                <productIdType>GTIN<\/productIdType>\n                <productId>04894444699847<\/productId>\n            <\/productIdentifier>\n            <productIdentifier>\n                <productIdType>GTIN<\/productIdType>\n                <productId>04894456887522<\/productId>\n            <\/productIdentifier>\n            <productIdentifier>\n                <productIdType>GTIN<\/productIdType>\n                <productId>04894456887621<\/productId>\n            <\/productIdentifier>\n        <\/productIdentifiers>\n        <MPProduct>\n            <SkuUpdate>No<\/SkuUpdate>\n            <msrp>100.00<\/msrp>\n            <productName>HP_CLOTHING_CATEGORY_PRODUCT_NAME<\/productName>\n            <additionalProductAttributes>\n                <additionalProductAttribute>\n                    <productAttributeName>string<\/productAttributeName>\n                    <productAttributeValue>string<\/productAttributeValue>\n                <\/additionalProductAttribute>\n            <\/additionalProductAttributes>\n            <ProductIdUpdate>Yes<\/ProductIdUpdate>\n            <category>\n                <ClothingCategory>\n                    <!--You have a CHOICE of the next 1 items at this level-->\n                    <Clothing>\n                        <shortDescription>SHORT DESCRIPTION OF CLOTHING<\/shortDescription>\n                        <keyFeatures>\n                            <keyFeaturesValue>string<\/keyFeaturesValue>\n                        <\/keyFeatures>\n                        <manufacturer>string<\/manufacturer>\n                        <manufacturerPartNumber>string<\/manufacturerPartNumber>\n                        <multipackQuantity>100<\/multipackQuantity>\n                        <countPerPack>10<\/countPerPack>\n                        <count>string<\/count>\n                        <pieceCount>10<\/pieceCount>\n                        <modelNumber>string<\/modelNumber>\n                        <mainImageUrl>\n                            https:\/\/us-i5.tb.wal.co\/asr\/d9850336-e05e-46c5-9120-23640271cd81_2.51e629fa54cb4ccfd1ef6e666f0dc27c.jpeg\n                        <\/mainImageUrl>\n                        <productSecondaryImageURL>\n                            <productSecondaryImageURLValue>\n                                https:\/\/us-i5.tb.wal.co\/asr\/d9850336-e05e-46c5-9120-23640271cd81_2.51e629fa54cb4ccfd1ef6e666f0dc27c.jpeg\n                            <\/productSecondaryImageURLValue>\n                        <\/productSecondaryImageURL>\n                        <color>string<\/color>\n                        <colorCategory>\n                            <colorCategoryValue>Blue<\/colorCategoryValue>\n                        <\/colorCategory>\n                        <pattern>string<\/pattern>\n                        <material>string<\/material>\n                        <gender>Unisex<\/gender>\n                        <ageGroup>\n                            <ageGroupValue>Tween<\/ageGroupValue>\n                        <\/ageGroup>\n                        <clothingSizeGroup>Young Men\u2019s<\/clothingSizeGroup>\n                        <clothingSize>string<\/clothingSize>\n                        <isSet>Yes<\/isSet>\n                        <variantGroupId>string<\/variantGroupId>\n                        <variantAttributeNames>\n                            <variantAttributeName>clothingSize<\/variantAttributeName>\n                        <\/variantAttributeNames>\n                        <isPrimaryVariant>No<\/isPrimaryVariant>\n                        <isProp65WarningRequired>No<\/isProp65WarningRequired>\n                        <prop65WarningText>string<\/prop65WarningText>\n                        <smallPartsWarnings>\n                            <smallPartsWarning>5<\/smallPartsWarning>\n                        <\/smallPartsWarnings>\n                        <requiresTextileActLabeling>No<\/requiresTextileActLabeling>\n                        <countryOfOriginTextiles>USA or Imported<\/countryOfOriginTextiles>\n                        <batteryTechnologyType>Lead Acid (Nonspillable)<\/batteryTechnologyType>\n                        <hasWarranty>No<\/hasWarranty>\n                        <warrantyURL>http:\/\/www.sample.com\/aris\/coniunx<\/warrantyURL>\n                        <warrantyText>string<\/warrantyText>\n                        <clothingTopStyle>string<\/clothingTopStyle>\n                        <dressShirtSize>string<\/dressShirtSize>\n                        <sleeveStyle>string<\/sleeveStyle>\n                        <sleeveLengthStyle>Short Sleeve<\/sleeveLengthStyle>\n                        <shirtNeckStyle>string<\/shirtNeckStyle>\n                        <collarType>string<\/collarType>\n                        <jacketStyle>string<\/jacketStyle>\n                        <suitBreastingStyle>double-breasted<\/suitBreastingStyle>\n                        <sweaterStyle>string<\/sweaterStyle>\n                        <scarfStyle>string<\/scarfStyle>\n                        <upperBodyStrapConfiguration>string<\/upperBodyStrapConfiguration>\n                        <hatSize>8<\/hatSize>\n                        <hatStyle>string<\/hatStyle>\n                        <braStyle>string<\/braStyle>\n                        <braSize>string<\/braSize>\n                        <chestSize>\n                            <measure>1000.00<\/measure>\n                            <unit>cm<\/unit>\n                        <\/chestSize>\n                        <pantRise>string<\/pantRise>\n                        <waistStyle>string<\/waistStyle>\n                        <waistSize>\n                            <measure>1000.00<\/measure>\n                            <unit>in<\/unit>\n                        <\/waistSize>\n                        <pantySize>12<\/pantySize>\n                        <skirtLength>\n                            <measure>1000.00<\/measure>\n                            <unit>in<\/unit>\n                        <\/skirtLength>\n                        <legOpeningCut>high-cut<\/legOpeningCut>\n                        <pantLegCut>string<\/pantLegCut>\n                        <jeanStyle>string<\/jeanStyle>\n                        <jeanWash>string<\/jeanWash>\n                        <jeanFinish>string<\/jeanFinish>\n                        <pantSize>string<\/pantSize>\n                        <pantFit>string<\/pantFit>\n                        <pantStyle>string<\/pantStyle>\n                        <beltStyle>string<\/beltStyle>\n                        <beltBuckleStyle>string<\/beltBuckleStyle>\n                        <pantyStyle>string<\/pantyStyle>\n                        <shortsStyle>string<\/shortsStyle>\n                        <skirtAndDressCut>string<\/skirtAndDressCut>\n                        <skirtLengthStyle>string<\/skirtLengthStyle>\n                        <hosieryStyle>string<\/hosieryStyle>\n                        <tightsSheerness>sheer<\/tightsSheerness>\n                        <underwearStyle>string<\/underwearStyle>\n                        <sockSize>string<\/sockSize>\n                        <sockStyle>string<\/sockStyle>\n                        <sockRise>thigh-high<\/sockRise>\n                        <fabricContent>\n                            <fabricContentValue>\n                                <materialName>string<\/materialName>\n                                <materialPercentage>1000.00<\/materialPercentage>\n                            <\/fabricContentValue>\n                        <\/fabricContent>\n                        <fabricCareInstructions>\n                            <fabricCareInstruction>string<\/fabricCareInstruction>\n                        <\/fabricCareInstructions>\n                        <accentColor>string<\/accentColor>\n                        <clothingWeight>lightweight<\/clothingWeight>\n                        <clothingStyle>string<\/clothingStyle>\n                        <clothingFit>string<\/clothingFit>\n                        <clothingCut>string<\/clothingCut>\n                        <clothingLengthStyle>string<\/clothingLengthStyle>\n                        <fastenerType>string<\/fastenerType>\n                        <swimsuitStyle>string<\/swimsuitStyle>\n                        <dressStyle>string<\/dressStyle>\n                        <gotsCertification>No<\/gotsCertification>\n                        <theme>string<\/theme>\n                        <character>string<\/character>\n                        <globalBrandLicense>\n                            <globalBrandLicenseValue>string<\/globalBrandLicenseValue>\n                        <\/globalBrandLicense>\n                        <sportsLeague>string<\/sportsLeague>\n                        <sportsTeam>string<\/sportsTeam>\n                        <occasion>string<\/occasion>\n                        <activity>string<\/activity>\n                        <sport>string<\/sport>\n                        <season>string<\/season>\n                        <weather>string<\/weather>\n                        <isMaternity>No<\/isMaternity>\n                        <academicInstitution>string<\/academicInstitution>\n                        <athlete>string<\/athlete>\n                        <autographedBy>string<\/autographedBy>\n                        <braBandSize>\n                            <measure>1000.00<\/measure>\n                            <unit>in<\/unit>\n                        <\/braBandSize>\n                        <braCupSize>string<\/braCupSize>\n                        <neckSize>\n                            <measure>1000.00<\/measure>\n                            <unit>in<\/unit>\n                        <\/neckSize>\n                        <sleeveLength>\n                            <measure>1000.00<\/measure>\n                            <unit>in<\/unit>\n                        <\/sleeveLength>\n                        <inseam>\n                            <measure>1000.00<\/measure>\n                            <unit>in<\/unit>\n                        <\/inseam>\n                        <isMadeFromRecycledMaterial>No<\/isMadeFromRecycledMaterial>\n                        <recycledMaterialContent>\n                            <recycledMaterialContentValue>\n                                <recycledMaterial>string<\/recycledMaterial>\n                                <percentageOfRecycledMaterial>1000.00<\/percentageOfRecycledMaterial>\n                            <\/recycledMaterialContentValue>\n                        <\/recycledMaterialContent>\n                        <features>\n                            <feature>string<\/feature>\n                        <\/features>\n                        <keywords>string<\/keywords>\n                        <swatchImages>\n                            <swatchImage>\n                                <swatchVariantAttribute>inseam<\/swatchVariantAttribute>\n                                <swatchImageUrl>https:\/\/us-i5.tb.wal.co\/asr\/d9850336-e05e-46c5-9120-23640271cd81_2.51e629fa54cb4ccfd1ef6e666f0dc27c.jpeg<\/swatchImageUrl>\n                            <\/swatchImage>\n                        <\/swatchImages>\n                    <\/Clothing>\n                <\/ClothingCategory>\n            <\/category>\n        <\/MPProduct>\n        <MPOffer>\n            <price>90.00<\/price>\n            <MinimumAdvertisedPrice>90.00<\/MinimumAdvertisedPrice>\n            <StartDate>2017-03-10<\/StartDate>\n            <EndDate>2017-03-15<\/EndDate>\n            <MustShipAlone>Yes<\/MustShipAlone>\n            <ShippingWeight>\n                <measure>10.00<\/measure>\n                <unit>lb<\/unit>\n            <\/ShippingWeight>\n            <ProductTaxCode>100<\/ProductTaxCode>\n            <shipsInOriginalPackaging>Yes<\/shipsInOriginalPackaging>\n            <additionalOfferAttributes>\n                <additionalOfferAttribute>\n                    <additionalOfferAttributeName>string<\/additionalOfferAttributeName>\n                    <additionalOfferAttributeValue>string<\/additionalOfferAttributeValue>\n                <\/additionalOfferAttribute>\n            <\/additionalOfferAttributes>\n            <ShippingOverrides>\n                <ShippingOverrideAction>REPLACE_ALL<\/ShippingOverrideAction>\n                <shippingOverride>\n                    <ShippingOverrideIsShippingAllowed>Yes<\/ShippingOverrideIsShippingAllowed>\n                    <ShippingOverrideShipMethod>ONE_DAY<\/ShippingOverrideShipMethod>\n                    <ShippingOverrideShipRegion>STREET_URBAN_ON<\/ShippingOverrideShipRegion>\n                    <ShippingOverrideshipPrice>100.00<\/ShippingOverrideshipPrice>\n                <\/shippingOverride>\n            <\/ShippingOverrides>\n        <\/MPOffer>\n    <\/MPItem>\n<\/MPItemFeed>"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/FeedId",
                                    "x-expose-headers": true
                                },
                                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<FeedAcknowledgement xmlns:ns2=\"http:\/\/walmart.com\/\">\n    <feedId>E9C04D1FFD99479FBC1341D56DD5F930@AQMB_wA<\/feedId>\n<\/FeedAcknowledgement>"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "channelType": [],
                        "signature": [],
                        "consumerId": []
                    }
                ]
            }
        },
        "\/v3\/ca\/items": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get all items",
                "description": "Displays a list of all items by using either nextCursor or offset and limit query parameters.\n\n\nThere are two ways of pagination for this API\n\n* Using nextCursor query parameter\nFirst call will have the value of nextCursor as '*'. If a call to the endpoint results in a large number of items being returned, the results are sent back in pages. The element nextCursor which is returned in the response is required for pagination.\n\n The nextCursor element contains the string that should be send as a query parameter to the subsequent GET call to get the next page of results.\n\n A missing or empty nextCursor element in the response means that there are no more items left to retrieve.\nThe totalCount returns the total number of available items. Therefore, analysis of the totalCount provides the number of pages to be retrieved to get the whole list of items.\n\n* Using offset and limit query parameter\nFirst call to the API using offset=0 will return the first page of the list of items. The full list can be retrieved by subsequent requests to the same API with successively larger values of offset.\n\nIf a SKU is included, this request is semantically identical to Get an Item request. It will return only one item and hence pagination is not required.",
                "operationId": "getAllItems",
                "parameters": [
                    {
                        "name": "nextCursor",
                        "in": "query",
                        "description": "Used for pagination when more than 200 items are retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "*"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item. This will be used by the seller in the XSD file to refer to each item.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The object response to start with, where 0 is the first entity that can be requested. It can only be used when includeDetails is set to true.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of entities to be returned. It cannot be more than 50 entities. Use it only when the includeDetails is set to true.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "20"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ItemResponses",
                                    "x-expose-headers": true
                                },
                                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ItemResponses xmlns:ns2=\"http:\/\/walmart.com\/\">\n    <ItemResponse>\n        <mart>WALMART_CA<\/mart>\n        <sku>379third908<\/sku>\n        <gtin>00313159099947<\/gtin>\n        <productName>Carex Soft Grip Folding Cane - Black Walking Cane<\/productName>\n        <productType>Walking Canes<\/productType>\n        <price>\n            <currency>CAD<\/currency>\n            <amount>13.27<\/amount>\n        <\/price>\n        <publishedStatus>IN_PROGRESS<\/publishedStatus>\n    <\/ItemResponse>\n    <ItemResponse>\n        <mart>WALMART_US<\/mart>\n        <sku>prodtest1571<\/sku>\n        <upc>889296686590<\/upc>\n        <gtin>00889296686590<\/gtin>\n        <productName>REFURBISHED: HP 250 G3 15.6\" Notebook, Intel 4th Gen i3, 4GB RAM, 500GB HDD, Win 8.1, M5G69UT#ABA<\/productName>\n        <productType>RAM Memory<\/productType>\n        <price>\n            <currency>CAD<\/currency>\n            <amount>329.99<\/amount>\n        <\/price>\n        <publishedStatus>PUBLISHED<\/publishedStatus>\n    <\/ItemResponse>\n<\/ItemResponses>"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "channelType": [],
                        "signature": [],
                        "consumerId": []
                    }
                ]
            }
        },
        "\/v3\/ca\/items\/{sku}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get an item",
                "description": "Retrieves an item and displays the item details shown in the response sample.",
                "operationId": "getAnItem",
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "description": "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item. This will be used by the seller in the XSD file to refer to each item. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ItemResponses",
                                    "x-expose-headers": true
                                },
                                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ItemResponses>\n  <ItemResponse>\n    <mart>WALMART_CA<\/mart>\n    <wpid>4W1AF6YU04F5<\/wpid>\n    <upc>735732770692<\/upc>\n    <gtin>00735732770692<\/gtin>\n    <productName>Victoria Classics Vista Paisley 8-Piece Bedding Comforter Set<\/productName>\n    <productType>Bedding Sets<\/productType>\n    <price>\n      <currency>CAD<\/currency>\n      <amount>13.27<\/amount>\n    <\/price>\n    <publishedStatus>IN_PROGRESS<\/publishedStatus>\n  <\/ItemResponse>\n<\/ItemResponses>"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "channelType": [],
                        "signature": [],
                        "consumerId": []
                    }
                ]
            }
        },
        "\/v3\/ca\/items\/{SKU}": {
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Retire an item",
                "description": "Completely deactivates and unpublishes an item from the site.\n\nRetired items are not displayed on Walmart.com, but their content stays intact in our system. You can republish an item by providing future discontinue date for the item.\n\n---\n**Note**\n\nYou can't reuse the SKU or Product ID from a retired item. If you need to change the SKU or Product ID, see Product ID & SKU section.\n\n---",
                "operationId": "retireAnItem",
                "parameters": [
                    {
                        "name": "SKU",
                        "in": "path",
                        "description": "SKU",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ItemRetireResponseV2",
                                    "x-expose-headers": true
                                },
                                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ItemRetireResponse xmlns:ns2=\"http:\/\/walmart.com\/\">\n    <sku>34931712<\/sku>\n    <message>Thank you. Your item has been submitted for retirement from Walmart Catalog. Please note that it can take up to 48 hours for items to be retired from our catalog.<\/message>\n<\/ItemRetireResponse>"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "channelType": [],
                        "signature": [],
                        "consumerId": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "FeedId": {
                "type": "object",
                "properties": {
                    "feedId": {
                        "type": "string",
                        "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
                    },
                    "additionalAttributes": {
                        "type": "object",
                        "nullable": true
                    },
                    "errors": {
                        "type": "object",
                        "nullable": true
                    }
                }
            },
            "Cause": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "field": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "Cause"
                }
            },
            "GatewayError": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "field": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "info": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "INFO",
                            "WARN",
                            "ERROR"
                        ]
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "APPLICATION",
                            "SYSTEM",
                            "REQUEST",
                            "DATA"
                        ]
                    },
                    "causes": {
                        "type": "array",
                        "xml": {
                            "wrapped": true
                        },
                        "items": {
                            "$ref": "#\/components\/schemas\/Cause"
                        }
                    },
                    "errorIdentifiers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "component": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "gatewayErrorCategory": {
                        "type": "string",
                        "enum": [
                            "INTERNAL_DATA_ERROR",
                            "EXTERNAL_DATA_ERROR",
                            "SYSTEM_ERROR"
                        ]
                    }
                },
                "xml": {
                    "name": "GatewayError"
                }
            },
            "ItemResponse": {
                "type": "object",
                "properties": {
                    "mart": {
                        "type": "string",
                        "description": "The marketplace name. Example: 'WALMART_CA'",
                        "enum": [
                            "WALMART_US",
                            "WALMART_CA",
                            "ASDA_GM",
                            "WALMART_MEXICO"
                        ]
                    },
                    "sku": {
                        "type": "string",
                        "description": "Unique identifier for the item"
                    },
                    "wpid": {
                        "type": "string",
                        "description": "An alphanumeric Product ID generated by Walmart"
                    },
                    "upc": {
                        "type": "string",
                        "description": "The 12-digit bar code used extensively for retail packaging in the United States"
                    },
                    "gtin": {
                        "type": "string",
                        "description": "The GTIN-compatible Product ID (i.e. UPC or EAN). UPCs must be 12 or 14 digitis in length. EANs must be 13 digits in length."
                    },
                    "productName": {
                        "type": "string",
                        "description": "A seller-specified, alphanumeric string uniquely identifying the product name. Example: 'Sterling Silver Blue Diamond Heart Pendant with 18in Chain'"
                    },
                    "shelf": {
                        "type": "string",
                        "description": "Walmart assigned item shelf name"
                    },
                    "productType": {
                        "type": "string",
                        "description": "A seller-specified, alphanumeric string uniquely identifying the Product Type. Example: 'Diamond'"
                    },
                    "price": {
                        "$ref": "#\/components\/schemas\/Money"
                    },
                    "publishedStatus": {
                        "type": "string",
                        "description": "The published status of an item describes where the item is in the submission process. Examples of allowed values are PUBLISHED, UNPUBLISHED."
                    }
                },
                "xml": {
                    "name": "ItemResponse"
                }
            },
            "ItemResponses": {
                "required": [
                    "ItemResponse"
                ],
                "type": "object",
                "properties": {
                    "totalItems": {
                        "type": "integer",
                        "description": "Total Items for the query",
                        "format": "int64"
                    },
                    "nextCursor": {
                        "type": "string",
                        "description": "Used for pagination when more than 200 items are retrieved. The nextCursor value of the response includes a link to another GET call which retrieves the next page of results."
                    },
                    "error": {
                        "type": "array",
                        "xml": {
                            "name": "error"
                        },
                        "items": {
                            "$ref": "#\/components\/schemas\/GatewayError"
                        }
                    },
                    "ItemResponse": {
                        "type": "array",
                        "description": "Items included in the response list",
                        "xml": {
                            "name": "ItemResponse"
                        },
                        "items": {
                            "$ref": "#\/components\/schemas\/ItemResponse"
                        }
                    }
                },
                "xml": {
                    "name": "ItemResponses"
                }
            },
            "Money": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "description": "The currency of the item price",
                        "enum": [
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYR",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHF",
                            "CLP",
                            "CNY",
                            "COP",
                            "CRC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "EUR",
                            "FJD",
                            "FKP",
                            "GBP",
                            "GEL",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LTL",
                            "LVL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRO",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RUR",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SHP",
                            "SLL",
                            "SOS",
                            "SRD",
                            "STD",
                            "SYP",
                            "SZL",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "UYU",
                            "UZS",
                            "VEF",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XAG",
                            "XAU",
                            "XBA",
                            "XBB",
                            "XBC",
                            "XBD",
                            "XCD",
                            "XDR",
                            "XFU",
                            "XOF",
                            "XPD",
                            "XPF",
                            "XPT",
                            "XTS",
                            "XXX",
                            "YER",
                            "ZAR",
                            "ZMK",
                            "ZWL"
                        ]
                    },
                    "amount": {
                        "type": "number",
                        "description": "The numerical amount of the price. Example: 9.99"
                    }
                },
                "description": "The current price of the item"
            },
            "ItemRetireResponseV2": {
                "required": [
                    "sku"
                ],
                "type": "object",
                "properties": {
                    "sku": {
                        "type": "string",
                        "description": "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item."
                    },
                    "message": {
                        "type": "string",
                        "description": "Message confirming the deletion or retirement of an item from the Walmart Catalog"
                    },
                    "error": {
                        "type": "array",
                        "xml": {
                            "name": "error"
                        },
                        "items": {
                            "$ref": "#\/components\/schemas\/GatewayError"
                        }
                    }
                },
                "xml": {
                    "name": "ItemRetireResponse"
                }
            }
        },
        "parameters": {
            "authorization": {
                "name": "Authorization",
                "in": "header",
                "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "Basic YzcyOTFjNmItNzI5MC00...."
            },
            "accessToken": {
                "name": "WM_SEC.ACCESS_TOKEN",
                "in": "header",
                "description": "The access token retrieved in the Token API call",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
            },
            "channelType": {
                "name": "WM_CONSUMER.CHANNEL.TYPE",
                "in": "header",
                "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "correlationId": {
                "name": "WM_QOS.CORRELATION_ID",
                "in": "header",
                "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
            },
            "svcName": {
                "name": "WM_SVC.NAME",
                "in": "header",
                "description": "Walmart Service Name",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "Walmart Service Name"
            },
            "accept": {
                "name": "Accept",
                "in": "header",
                "description": "Only supported Media Type : application\/json",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "application\/json"
            },
            "content-type": {
                "name": "Content-Type",
                "in": "header",
                "description": "Only supported Media Type : application\/json",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "application\/json"
            }
        },
        "securitySchemes": {
            "channelType": {
                "type": "apiKey",
                "in": "header",
                "name": "WM_CONSUMER.CHANNEL.TYPE",
                "description": "Header authentication with your Walmart channel type, which is passed in the WM_CONSUMER.CHANNEL.TYPE header. When using endpoints that require channel type authentication, you must pass the `channelType` option to the `Configuration` constructor."
            },
            "consumerId": {
                "type": "apiKey",
                "in": "header",
                "name": "WM_CONSUMER.ID",
                "description": "Header authentication with your Walmart consumer ID, which is passed in the WM_CONSUMER.ID header. This is always used in tandem with signature authentication (below). When using endpoints that require consumer ID authentication, you must pass the `consumerId` option to the `Configuration` constructor."
            },
            "signature": {
                "type": "apiKey",
                "in": "header",
                "name": "WM_SEC.AUTH_SIGNATURE",
                "description": "Request signature authentication. Request signatures are generated using a combination of request info, a timestamp, and your Walmart consumer ID and private key. The signature is passed in the WM_SEC.AUTH_SIGNATURE header. This is always used in tandem with consumer ID authentication (above). When using endpoints that require signature authentication, you must pass the `privateKey` and `consumerId` options to the `Configuration` constructor."
            }
        }
    }
}