{
    "openapi": "3.0.1",
    "info": {
        "title": "Feed Management",
        "description": "Feeds are constructed to handle bulk functions. A feed consists of an HTTP request with an attached file. The attached file contains the XML representing the objects that need to be created or updated.",
        "version": "0.7.0"
    },
    "servers": [
        {
            "url": "https:\/\/marketplace.walmartapis.com",
            "description": "Production URL"
        },
        {
            "url": "https:\/\/sandbox.walmartapis.com",
            "description": "Sandbox URL"
        }
    ],
    "security": [
        {
            "basicScheme": []
        }
    ],
    "paths": {
        "\/v3\/feeds": {
            "get": {
                "tags": [
                    "Feeds"
                ],
                "summary": "All feed statuses",
                "description": "Returns the feed statuses for all the specified Feed IDs.",
                "operationId": "getAllFeedStatuses",
                "parameters": [
                    {
                        "name": "feedId",
                        "in": "query",
                        "description": "A unique ID returned from the Bulk Upload API, used for tracking the Feed File. Special characters must be escaped. (e.g., feedId: '...3456@789...' must be entered in the URL as '...3456%40789).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The object response to start with, where 0 is the first entity that can be requested. It can only be used when includeDetails is set to true.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of entities to be returned. It cannot be more than 50 entities. Use it only when the includeDetails is set to true.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "50"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/FeedRecordResponse",
                                    "x-expose-headers": true
                                },
                                "example": {
                                    "totalResults": 163,
                                    "offset": 0,
                                    "limit": 50,
                                    "results": {
                                        "feed": [
                                            {
                                                "feedId": "C398C408F1B04269830FC1CCF6F68D98@AQMBAQA",
                                                "feedSource": "MARKETPLACE_PARTNER",
                                                "feedType": "item",
                                                "partnerId": "10900022599",
                                                "itemsReceived": 1,
                                                "itemsSucceeded": 1,
                                                "itemsFailed": 0,
                                                "itemsProcessing": 0,
                                                "feedStatus": "PROCESSED",
                                                "feedDate": 1574448652545,
                                                "modifiedDtm": 1574448674657,
                                                "fileName": "item_tv.xml",
                                                "itemDataErrorCount": 0,
                                                "itemSystemErrorCount": 0,
                                                "itemTimeoutErrorCount": 0,
                                                "channelType": "0f3e4dd4-0514-4346-b39d-af0e00ea066d",
                                                "orgId": "f971cf64-e3bb-4ea4-b79a-8393e7114969"
                                            },
                                            {
                                                "feedId": "2601163173CF4F8290898F1F7256793F@AQMBAQA",
                                                "feedSource": "MARKETPLACE_PARTNER",
                                                "feedType": "item",
                                                "partnerId": "10900022599",
                                                "itemsReceived": 1,
                                                "itemsSucceeded": 1,
                                                "itemsFailed": 0,
                                                "itemsProcessing": 0,
                                                "feedStatus": "PROCESSED",
                                                "feedDate": 1574379628639,
                                                "modifiedDtm": 1574379642614,
                                                "fileName": "item_tv.xml",
                                                "itemDataErrorCount": 0,
                                                "itemSystemErrorCount": 0,
                                                "itemTimeoutErrorCount": 0,
                                                "channelType": "0f3e4dd4-0514-4346-b39d-af0e00ea066d",
                                                "orgId": "f971cf64-e3bb-4ea4-b79a-8393e7114969"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [],
                        "accessToken": []
                    }
                ]
            }
        },
        "\/v3\/feeds\/{feedId}": {
            "get": {
                "tags": [
                    "Feeds"
                ],
                "summary": "Feed item status",
                "description": "Returns the feed and item status for a specified Feed ID.",
                "operationId": "getFeedItemStatus",
                "parameters": [
                    {
                        "name": "feedId",
                        "in": "path",
                        "description": "The feed ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeDetails",
                        "in": "query",
                        "description": "Includes details of each entity in the feed. Do not set this parameter to true.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "false"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The object response to start with, where 0 is the first entity that can be requested. It can only be used when includeDetails is set to true.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of entities to be returned. It cannot be more than 50 entities. Use it only when the includeDetails is set to true.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "50"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PartnerFeedResponse",
                                    "x-expose-headers": true
                                },
                                "example": {
                                    "feedId": "2601163173CF4F8290898F1F7256793F@AQMBAQA",
                                    "feedStatus": "PROCESSED",
                                    "shipNode": null,
                                    "submittedBy": null,
                                    "feedSubmissionDate": 1574379628639,
                                    "ingestionErrors": null,
                                    "itemsReceived": 1,
                                    "itemsSucceeded": 1,
                                    "itemsFailed": 0,
                                    "itemsProcessing": 0,
                                    "offset": 0,
                                    "limit": 50,
                                    "itemDetails": {
                                        "itemIngestionStatus": [
                                            {
                                                "martId": 0,
                                                "sku": "sku-test3",
                                                "wpid": "5I5XS1SDJAQ5",
                                                "index": 0,
                                                "itemid": "259795170",
                                                "productIdentifiers": {
                                                    "productIdentifier": [
                                                        {
                                                            "productIdType": "GTIN",
                                                            "productId": "05662357960175"
                                                        }
                                                    ]
                                                },
                                                "ingestionStatus": "SUCCESS",
                                                "ingestionErrors": null,
                                                "additionalAttributes": null
                                            }
                                        ]
                                    },
                                    "additionalAttributes": null
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [],
                        "accessToken": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Cause": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "field": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "Cause"
                }
            },
            "FeedRecord": {
                "type": "object",
                "properties": {
                    "feedId": {
                        "type": "string",
                        "description": "A unique ID used for tracking the Feed File"
                    },
                    "feedSource": {
                        "type": "string",
                        "description": "The source of the feed"
                    },
                    "feedType": {
                        "type": "string",
                        "description": "The feed type"
                    },
                    "partnerId": {
                        "type": "string",
                        "description": "The seller ID"
                    },
                    "itemsReceived": {
                        "type": "integer",
                        "description": "The number of items received",
                        "format": "int64"
                    },
                    "itemsSucceeded": {
                        "type": "integer",
                        "description": "The number of items in the feed that have successfully processed",
                        "format": "int64"
                    },
                    "itemsFailed": {
                        "type": "integer",
                        "description": "The number of items in the feed that failed due to a data or system error",
                        "format": "int64"
                    },
                    "itemsProcessing": {
                        "type": "integer",
                        "description": "The number of items in the feed that are still in progress",
                        "format": "int64"
                    },
                    "feedStatus": {
                        "type": "string",
                        "description": "Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR. For details, see the definitions listed under 'Feed Statuses' at the beginning of this section."
                    },
                    "feedDate": {
                        "type": "integer",
                        "description": "The date and time the feed was submitted. Format: yyyymmddThh:mm:ss.xxxz",
                        "format": "int64"
                    },
                    "batchId": {
                        "type": "string",
                        "description": "The batch ID for the feed, if provided"
                    },
                    "modifiedDtm": {
                        "type": "integer",
                        "description": "The most recent time the feed was modified. Format: yyyymmddThh:mm:ss.xxxz",
                        "format": "int64"
                    }
                },
                "description": "Information about the individual feed",
                "xml": {
                    "name": "feed"
                }
            },
            "FeedRecordResponse": {
                "type": "object",
                "properties": {
                    "totalResults": {
                        "type": "integer",
                        "description": "Total number of feeds returned",
                        "format": "int64"
                    },
                    "offset": {
                        "type": "integer",
                        "description": "The object response to the starting number, where 0 is the first available",
                        "format": "int64"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "The number of items to be returned",
                        "format": "int32"
                    },
                    "results": {
                        "$ref": "#\/components\/schemas\/ResultRecord"
                    },
                    "error": {
                        "type": "array",
                        "xml": {
                            "name": "error"
                        },
                        "items": {
                            "$ref": "#\/components\/schemas\/GatewayError"
                        }
                    }
                },
                "xml": {
                    "name": "list"
                }
            },
            "GatewayError": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "field": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "info": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "INFO",
                            "WARN",
                            "ERROR"
                        ]
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "APPLICATION",
                            "SYSTEM",
                            "REQUEST",
                            "DATA"
                        ]
                    },
                    "causes": {
                        "type": "array",
                        "xml": {
                            "wrapped": true
                        },
                        "items": {
                            "$ref": "#\/components\/schemas\/Cause"
                        }
                    },
                    "errorIdentifiers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "component": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "gatewayErrorCategory": {
                        "type": "string",
                        "enum": [
                            "INTERNAL_DATA_ERROR",
                            "EXTERNAL_DATA_ERROR",
                            "SYSTEM_ERROR"
                        ]
                    }
                },
                "xml": {
                    "name": "GatewayError"
                }
            },
            "ResultRecord": {
                "type": "object",
                "properties": {
                    "feed": {
                        "type": "array",
                        "description": "The feed status results",
                        "items": {
                            "$ref": "#\/components\/schemas\/FeedRecord"
                        }
                    }
                },
                "description": "The feed status results"
            },
            "IngestionError": {
                "required": [
                    "code",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Error Type",
                        "enum": [
                            "DATA_ERROR",
                            "SYSTEM_ERROR",
                            "TIMEOUT_ERROR"
                        ]
                    },
                    "code": {
                        "type": "string",
                        "description": "Error code"
                    },
                    "description": {
                        "type": "string",
                        "description": "Error description"
                    }
                }
            },
            "IngestionErrors": {
                "type": "object",
                "properties": {
                    "ingestionError": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/IngestionError"
                        }
                    }
                },
                "description": "List of errors for an item"
            },
            "ItemDetails": {
                "type": "object",
                "properties": {
                    "itemIngestionStatus": {
                        "type": "array",
                        "description": "The ingestion status of an individual item",
                        "items": {
                            "$ref": "#\/components\/schemas\/PartnerItemIngestionStatus"
                        }
                    }
                },
                "description": "List of ingestion status details for items in the feed"
            },
            "PartnerFeedResponse": {
                "type": "object",
                "properties": {
                    "feedId": {
                        "type": "string",
                        "description": "A unique ID used for tracking the Feed File"
                    },
                    "feedStatus": {
                        "type": "string",
                        "description": "Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR",
                        "enum": [
                            "RECEIVED",
                            "INPROGRESS",
                            "PROCESSED",
                            "ERROR"
                        ]
                    },
                    "ingestionErrors": {
                        "$ref": "#\/components\/schemas\/IngestionErrors"
                    },
                    "itemsReceived": {
                        "type": "integer",
                        "description": "The number of items received in the feed",
                        "format": "int32"
                    },
                    "itemsSucceeded": {
                        "type": "integer",
                        "description": "The number of items in the feed that processed successfully",
                        "format": "int32"
                    },
                    "itemsFailed": {
                        "type": "integer",
                        "description": "The number of items in the feed that failed due to a data or system error",
                        "format": "int32"
                    },
                    "itemsProcessing": {
                        "type": "integer",
                        "description": "The number of items in the feed that are still processing",
                        "format": "int32"
                    },
                    "offset": {
                        "type": "integer",
                        "description": "The object response to the starting number, where 0 is the first entity available for request",
                        "format": "int32"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "The number of items returned. Cannot be greater than 1000.",
                        "format": "int32"
                    },
                    "itemDetails": {
                        "$ref": "#\/components\/schemas\/ItemDetails"
                    },
                    "error": {
                        "type": "array",
                        "xml": {
                            "name": "error"
                        },
                        "items": {
                            "$ref": "#\/components\/schemas\/GatewayError"
                        }
                    }
                },
                "xml": {
                    "name": "PartnerFeedResponse"
                }
            },
            "PartnerItemIngestionStatus": {
                "required": [
                    "ingestionStatus"
                ],
                "type": "object",
                "properties": {
                    "martId": {
                        "type": "integer",
                        "description": "Mart ID that a user or seller uses for a marketplace",
                        "format": "int32"
                    },
                    "sku": {
                        "type": "string",
                        "description": "An arbitrary alphanumeric unique ID, seller-specified, identifying each item."
                    },
                    "wpid": {
                        "type": "string",
                        "description": "An alphanumeric product ID, generated by Walmart"
                    },
                    "index": {
                        "type": "integer",
                        "description": "index of items in the feed",
                        "format": "int32"
                    },
                    "ingestionStatus": {
                        "type": "string",
                        "description": "Can be one of the following: DATA_ERROR, SYSTEM_ERROR, TIMEOUT_ERROR, or INPROGRESS",
                        "enum": [
                            "INPROGRESS",
                            "SUCCESS",
                            "DATA_ERROR",
                            "SYSTEM_ERROR",
                            "TIMEOUT_ERROR"
                        ]
                    },
                    "ingestionErrors": {
                        "$ref": "#\/components\/schemas\/IngestionErrors"
                    }
                },
                "description": "The ingestion status of an individual item"
            }
        },
        "parameters": {
            "authorization": {
                "name": "Authorization",
                "in": "header",
                "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "Basic YzcyOTFjNmItNzI5MC00...."
            },
            "accessToken": {
                "name": "WM_SEC.ACCESS_TOKEN",
                "in": "header",
                "description": "The access token retrieved in the Token API call",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
            },
            "channelType": {
                "name": "WM_CONSUMER.CHANNEL.TYPE",
                "in": "header",
                "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "correlationId": {
                "name": "WM_QOS.CORRELATION_ID",
                "in": "header",
                "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
            },
            "svcName": {
                "name": "WM_SVC.NAME",
                "in": "header",
                "description": "Walmart Service Name",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "Walmart Service Name"
            },
            "accept": {
                "name": "Accept",
                "in": "header",
                "description": "Only supported Media Type : application\/json",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "application\/json"
            },
            "content-type": {
                "name": "Content-Type",
                "in": "header",
                "description": "Only supported Media Type : application\/json",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "application\/json"
            }
        },
        "securitySchemes": {
            "accessToken": {
                "type": "http",
                "scheme": "bearer",
                "description": "Header authentication with a Walmart access token, which is automatically generated using your Client ID and Client Secret. The token is valid for 15 minutes, and will be passed in the WM_SEC.ACCESS_TOKEN header"
            },
            "basic": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic authentication with a Walmart Client ID and Client Secret"
            }
        }
    }
}